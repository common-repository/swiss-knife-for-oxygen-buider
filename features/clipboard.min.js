jQuery(document).ready((function(e){console.log('clipboard');function t(){try{if(iframeScope)return iframeScope}catch(e){}return $scope.iframeScope}function o(){const e=t().component.active;if(e){var o=e.id>0&&e.id<1e5?[(c=e.id,i=null,function e(t){void 0!==t.id&&t.id==c?i=t:t.children&&t.children.forEach(e)}(t().componentsTree),i)]:(n=[],function e(t){t.forEach((function(t){t.id<1e5?n.push(t):t.children&&e(t.children)}))}(t().componentsTree.children),n);if(o.length){const e=function(e){const o={};function n(e){const c=e.id;t().componentsClasses.hasOwnProperty(c)&&t().componentsClasses[c].forEach((function(e){o.hasOwnProperty(e)||t().classes.hasOwnProperty(e)&&(o[e]=t().classes[e])})),e.children&&e.children.forEach(n)}return e.constructor==Array?e.forEach(n):n(e),o}(o),n=function(e,o){var n={};function c(e){for(a in e)if(e.hasOwnProperty(a)){var o=e[a];if("string"==typeof o){var i=o.match(/color\((\d+)\)/);if(i){var a=i[1];if(n.hasOwnProperty(a))return;var r=t().getGlobalColor(a);r&&(n[a]=_.pick(r,"id","name","value"))}}"object"==typeof o&&c(o)}}return c(e),c(o),n}(o,e);return function(){const e=t().getActiveComponent();e.length&&(e.addClass("swk--copy-animation"),setTimeout((function(){e.removeClass("swk--copy-animation")}),1e3))}(),void s(l({type:"element",source:window.location.host,component:o,classes:e,colors:n}))}r("Can not copy the element to clipboard")}var n,c,i}function n(){swkUseSystemClipboard?async function(){return new Promise(((e,t)=>{Promise.all(i.map((e=>navigator.permissions.query(e)))).then((o=>{o.forEach(((o,n)=>{const c=i[n],a=function(e){let t=e.name.split("-").pop();"allowWithoutGesture"in e&&(t+=" "+(e.allowWithoutGesture?"(without gesture)":"(with gesture)"));return t}(c),r=document.createElement("button");r.title="Click to request permission",r.textContent=a,r.onclick=()=>{navigator.permissions.request(c).then((()=>{})).catch((e=>{t()}))},o.onchange=()=>{navigator.clipboard.readText().then((n=>{"granted"===o.state?e(n):t()})).catch((()=>{t()}))},o.onchange()}))})).catch((()=>{t()}))}))}().then((e=>{e&&a(e)})).catch((()=>{if(t().showNoticeModal){t().showNoticeModal('<div style="display: flex; flex-direction: column; align-items: center; text-align: center;"><div>We have not permission for using clipboard data. Only Chrome supports fast pasting. If you are using Chrome, then give access to not show this window again. Past text from your clipboard to input and press Enter.</div><input id="clipboard-hack" style="color: black;" type="text"><button style="color: black;" id="clipboard-hack-submit">Ok</button></div>');setTimeout((()=>{let e=document.getElementById("clipboard-hack"),t=document.getElementById("clipboard-hack-submit");e||(e=parent.document.getElementById("clipboard-hack")),t||(t=parent.document.getElementById("clipboard-hack-submit")),e&&(e.addEventListener("keyup",(function(e){e.preventDefault(),13===e.keyCode&&t.click()})),e.focus()),t&&t.addEventListener("click",(()=>{a(e.value)}))}),1e3)}else alert("Clipboard not allowed")})):a(window.localStorage.getItem("sw-clipboard"))}window.addEventListener("message",(function(e){if(e.data&&e.data.action)switch(e.data.action){case"swk-shortcuts-cut":!function(){const e=t().component.active;o(),t().removeComponentById(e.id,e.name,e.parent.id)}();break;case"swk-shortcuts-copy":o();break;case"swk-shortcuts-past":n();break;case"swk-shortcuts-copy-conditions":copied_conditions=t().component.options[t().component.active.id].id.globalconditions,s(l({type:"conditions",conditions:copied_conditions}))}}));const i=[{name:"clipboard-read",allowWithoutGesture:!1},{name:"clipboard-write"}];function a(e){const o=function(e){try{const t=JSON.parse(decodeURIComponent(escape(atob(e))));if("object"==typeof t&&!Array.isArray(t)&&null!==t&&Object.prototype.hasOwnProperty.call(t,"type")&&("element"===t.type&&["source","component","classes","colors"].every((e=>Object.prototype.hasOwnProperty.call(t,e)))||"conditions"===t.type&&Object.prototype.hasOwnProperty.call(t,"conditions")))return t}catch(e){}return}(e);if(o){if("conditions"===o.type)t().setOptionModel("globalconditions",o.conditions,t().component.active.id,t().component.active.name),t().setOptionModel("conditionstype","",t().component.active.id,t().component.active.name);else if("element"===o.type){const e=o.component,i=o.classes;window.location.host!==o.source&&(function(e){!function e(t){if("ct_image"==t.name){var o=t.options.original;if(o.attachment_url)for(var n in"2"==o.image_type&&(delete o.image_type,o.src=o.attachment_url),o)0==n.indexOf("attachment_")&&delete o[n]}t.children&&t.children.forEach(e)}(e)}(e),function(e,o,n,i){var a={},r=t().globalColorSets;function s(e,t){return"color("+a[parseInt(t)]+")"}function l(e){_.each(e,(function(t,o){var n=/color\((\d*)\)/g;"string"==typeof t&&n.test(t)?e[o]=t.replace(n,s):"object"==typeof t&&l(e[o])}))}c=_.findWhere(r.sets,{name:i}),"object"!=typeof c&&(c={id:++r.setsIncrement,name:i},r.sets.push(c)),_.each(e,(function(e){var t=_.findWhere(r.colors,{name:e.name,set:c.id});"object"!=typeof t&&(t={id:++r.colorsIncrement,name:e.name,value:e.value,set:c.id},r.colors.push(t)),a[e.id]=t.id})),l(o),l(n)}(o.colors,e,i,"Copied Colors"),function(e,o){for(key in"object"!=typeof t().styleFolders[o]&&(t().styleFolders[o]={status:1,key:o}),e)e[key].parent=o;t().classes=Object.assign(e,t().classes),t().classesCached=!1}(i,"Copied Classes"));var n={id:0,depth:0,name:"root",children:[]};Array.isArray(e)?n.children=e:n.children.push(e),setTimeout((()=>{t().addReusableChildren(n,null,t().component.active.id),t().activateComponent(t().component.active.id,t().component.active.name)}))}}else r("Invalid value")}function r(e){t()&&t().showNoticeModal?setTimeout((function(){t().showNoticeModal("<div>"+e+"</div>")}),100):alert(e)}function s(e){if(e)if(swkUseSystemClipboard){var t=document.createElement("textarea");t.value=e,document.body.appendChild(t),t.select(),document.execCommand("Copy"),t.remove()}else window.localStorage.setItem("sw-clipboard",e)}function l(e){try{var t=JSON.stringify(e,(function(e,t){if("string"!=typeof e||0!==e.indexOf("$$"))return t}));return btoa(unescape(encodeURIComponent(t)))}catch(e){console.error(e)}return""}}));